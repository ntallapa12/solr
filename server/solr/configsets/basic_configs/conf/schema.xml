<?xml version="1.0" encoding="UTF-8" ?>

<schema name="yojana" version="1.5">
  <!-- If you remove this field, you must _also_ disable the update log in solrconfig.xml
       or Solr won't start. _version_ and update log are required for SolrCloud
  --> 
  <field name="_version_" type="long" indexed="true" stored="true"/>
   
  <field name="id" type="int" indexed="true" stored="true" required="true" multiValued="false" />
  <field name="name" type="text_general" indexed="true" stored="true" required="true" multiValued="false" />   
  <field name="start_date" type="tdate" indexed="true" stored="true" required="true" multiValued="false" />
  <field name="end_date" type="tdate" indexed="true" stored="true" required="false" multiValued="false" />
  <field name="age" type="tint" indexed="true" stored="true" required="false" multiValued="false" />
  <field name="summary" type="text_general" indexed="true" stored="true" required="false" multiValued="false" /> 
   
  <!-- Do we need to store decimal values for income or will approximation do? -->
  <field name="income_per_annum" type="tint" indexed="true" stored="true" required="false" multiValued="false"/>
  <field name="minimum_education" type="string" indexed="true" stored="true" required="false" multiValued="false"/>
  
  <!-- catchall field, containing all other searchable text fields (implemented
       via copyField further on in this schema  -->
  <field name="text" type="text_general" indexed="true" stored="false" multiValued="true"/>
  
  <!-- Dynamic field definitions allow using convention over configuration
       for fields via the specification of patterns to match field names. 
       EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
       RESTRICTION: the glob-like pattern in the name attribute must have
       a "*" only at the start or the end.  -->
   
  <dynamicField name="*_i" type="int" indexed="true" stored="true" />
  <dynamicField name="*_is" type="int" indexed="true" stored="true" multiValued="true" />
  <dynamicField name="*_s" type="string" indexed="true" stored="true" />
  <dynamicField name="*_ss" type="string" indexed="true" stored="true" multiValued="true" />
  <dynamicField name="*_l" type="long" indexed="true" stored="true" />
  <dynamicField name="*_ls" type="long" indexed="true" stored="true" multiValued="true" />
  <dynamicField name="*_t" type="text_general" indexed="true" stored="true" />
  <dynamicField name="*_txt" type="text_general" indexed="true" stored="true" multiValued="true" />
  <dynamicField name="*_b" type="boolean" indexed="true" stored="true" />
  <dynamicField name="*_bs" type="boolean" indexed="true" stored="true" multiValued="true" />
  <dynamicField name="*_f" type="float" indexed="true" stored="true" />
  <dynamicField name="*_fs" type="float" indexed="true" stored="true" multiValued="true" />
  <dynamicField name="*_d" type="double" indexed="true" stored="true" />
  <dynamicField name="*_ds" type="double" indexed="true" stored="true" multiValued="true" />

  <!-- Type used to index the lat and lon components for the "location" FieldType -->
  <dynamicField name="*_coordinate" type="tdouble" indexed="true" stored="false" />

  <dynamicField name="*_dt" type="date" indexed="true" stored="true" />
  <dynamicField name="*_dts" type="date" indexed="true" stored="true" multiValued="true" />
  
  <!-- some trie-coded dynamic fields for faster range queries -->
  <dynamicField name="*_ti" type="tint" indexed="true" stored="true"/>
  <dynamicField name="*_tl" type="tlong" indexed="true" stored="true"/>
  <dynamicField name="*_tf" type="tfloat" indexed="true" stored="true"/>
  <dynamicField name="*_td" type="tdouble" indexed="true" stored="true"/>
  <dynamicField name="*_tdt" type="tdate" indexed="true" stored="true"/>
   
  <uniqueKey>id</uniqueKey>
  
  <!-- copyField commands copy one field to another at the time a document
       is added to the index. It's used either to index the same field differently,
       or to add multiple fields to the same field for easier/faster searching.  -->

  <copyField source="name" dest="text"/>
  <copyField source="summary" dest="text"/>
  
  <fieldType name="string" class="solr.StrField" sortMissingLast="true" />
  <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
  <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
  <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
  <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
  <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>

  <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>
  <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>
  <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>
  <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>

  <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>

  <!-- A Trie based date field for faster date range queries and date faceting. -->
  <fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>

  <!-- A text field that only splits on whitespace for exact matching of words -->
  <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
    <analyzer>
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
    </analyzer>
  </fieldType>

  <!-- A general text field that has reasonable, generic
       cross-language defaults: it tokenizes with StandardTokenizer,
	     removes stop words from case-insensitive "stopwords.txt"
	     (empty by default), and down cases.  At query time only, it
	     also applies synonyms. 
  -->
  <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
    <analyzer type="index">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
      <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>
  
</schema>
